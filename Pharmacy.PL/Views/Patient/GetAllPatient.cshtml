@model IEnumerable<Hospital_Mangment_System_BLL.View_model.patientVM.GetAllPatientssVM>

@{
    ViewData["Title"] = "All Patients";
}

<div class="container mt-4">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="fw-bold">🩺 All Patients</h2>
        <a href="@Url.Action("AddPatient", "Patient")" class="btn btn-success shadow-sm">
            <i class="bi bi-plus-circle me-1"></i> Add Patient
        </a>
    </div>

    <div class="mb-4">
        <input type="text" id="searchInput" class="form-control form-control-lg shadow-sm" placeholder="🔍 Search patients by name or history..." />
    </div>

    @if (!Model.Any())
    {
        <div class="alert alert-info text-center">
            <i class="bi bi-info-circle-fill"></i> No patients found.
        </div>
    }
    else
    {
        <div id="patientCards" class="row row-cols-1 row-cols-md-2 row-cols-lg-3 g-4">
            @foreach (var patient in Model)
            {
                <div class="col patient-card">
                    <div class="card h-100 shadow-sm border-0">
                        <div class="card-body">
                            <h5 class="card-title text-primary patient-name">@patient.Name</h5>
                            <p class="card-text text-muted patient-history">
                                <strong>Medical History:</strong> <br />
                                @patient.MedicalHistory
                            </p>
                        </div>
                        <div class="card-footer bg-transparent border-0 d-flex justify-content-between">
                            <a href="#" class="btn btn-outline-danger btn-sm" onclick="confirmDelete('@patient.PatientID')">
                                <i class="bi bi-trash"></i> Delete
                            </a>
                        </div>
                    </div>
                </div>
            }
        </div>
    }
</div>

@section Styles {
    <style>
        .card:hover {
            transform: scale(1.02);
            transition: transform 0.2s ease-in-out;
        }
    </style>

    <script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

    <script>
        function confirmDelete(patientId) {
            Swal.fire({
                title: 'Are you sure?',
                text: "This action cannot be undone.",
                icon: 'warning',
                showCancelButton: true,
                confirmButtonColor: '#d33',
                cancelButtonColor: '#6c757d',
                confirmButtonText: 'Yes, delete it!'
            }).then((result) => {
                if (result.isConfirmed) {
                    window.location.href = `/Patient/DeletePatient?id=${patientId}`;
                }
            });
        }

        // Success alert if redirected after deletion
        const urlParams = new URLSearchParams(window.location.search);
        if (urlParams.get("deleted") === "true") {
            Swal.fire({
                title: 'Deleted!',
                text: 'The patient has been deleted.',
                icon: 'success',
                timer: 2000,
                showConfirmButton: false
            });
        }

        // Dynamic search functionality
        document.getElementById("searchInput").addEventListener("input", function () {
            const searchValue = this.value.toLowerCase().trim();
            const cards = document.querySelectorAll(".patient-card");

            cards.forEach(card => {
                const name = card.querySelector(".patient-name").textContent.toLowerCase();
                const history = card.querySelector(".patient-history").textContent.toLowerCase();
                const isVisible = name.includes(searchValue) || history.includes(searchValue);

                card.style.display = isVisible ? "block" : "none";
            });
        });
    </script>
}
