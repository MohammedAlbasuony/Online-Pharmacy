@using X.PagedList
@using X.PagedList.Mvc.Core
@model IPagedList<Pharmacy.DAL.Entity.Consultation>

@{
    ViewData["Title"] = "Consultations";
}

<!-- SweetAlert2 -->
<link href="https://cdn.jsdelivr.net/npm/sweetalert2@11/dist/sweetalert2.min.css" rel="stylesheet">
<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>

<div class="container mt-5">
    <div class="d-flex justify-content-between align-items-center mb-4">
        <h2 class="text-primary fw-bold">@ViewData["Title"]</h2>
        <a asp-action="Create" class="btn btn-success shadow-sm rounded-pill px-4">
            <i class="bi bi-plus-lg"></i> New Consultation
        </a>
    </div>

    @if (Model != null && Model.Any())
    {
        <div class="table-responsive rounded shadow-sm">
            <table class="table table-hover table-bordered align-middle text-center">
                <thead class="table-primary">
                    <tr>
                        <th>Patient</th>
                        <th>Date</th>
                        <th>Time</th>
                        <th>Type</th>
                        <th>Status</th>
                        <th>Actions</th>
                    </tr>
                </thead>
                <tbody>
                    @foreach (var item in Model)
                    {
                        <tr>
                            <td>@Html.DisplayFor(modelItem => item.PatientName)</td>
                            <td>@item.Date.ToString("MMM dd, yyyy")</td>
                            <td>@item.Time.ToString(@"hh\:mm")</td>
                            <td>@Html.DisplayFor(modelItem => item.Type)</td>
                            <td>
                                <span class="badge
                                    @(item.Status == Pharmacy.DAL.Entity.ConsultationStatus.Scheduled ? "bg-warning text-dark" :
                                      item.Status == Pharmacy.DAL.Entity.ConsultationStatus.Completed ? "bg-success" :
                                      item.Status == Pharmacy.DAL.Entity.ConsultationStatus.Cancelled ? "bg-danger" :
                                      "bg-secondary")">
                                    @Html.DisplayFor(modelItem => item.Status)
                                </span>
                            </td>
                            <td>
                                <div class="btn-group" role="group">
                                    <a asp-action="Details" asp-route-id="@item.Id" class="btn btn-sm btn-outline-info">Details</a>
                                    <a asp-action="Edit" asp-route-id="@item.Id" class="btn btn-sm btn-outline-warning">Edit</a>
                                    <form method="post" action="@Url.Action("Delete", new { id = item.Id })" id="deleteForm_@item.Id" style="display:inline;">
                                        @Html.AntiForgeryToken()
                                        <button type="button" onclick="confirmDelete('@item.Id')" class="btn btn-sm btn-outline-danger">Delete</button>
                                    </form>
                                </div>
                            </td>

                        </tr>
                    }
                </tbody>
            </table>
        </div>

        <div class="d-flex justify-content-center mt-4">
            <nav>
                <ul class="pagination pagination-sm shadow-sm">
                    <li class="page-item @(Model.HasPreviousPage ? "" : "disabled")">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber - 1 })" aria-label="Previous">
                            <span aria-hidden="true">&laquo;</span>
                        </a>
                    </li>

                    @for (var i = 1; i <= Model.PageCount; i++)
                    {
                        <li class="page-item @(i == Model.PageNumber ? "active" : "")">
                            <a class="page-link" href="@Url.Action("Index", new { page = i })">@i</a>
                        </li>
                    }

                    <li class="page-item @(Model.HasNextPage ? "" : "disabled")">
                        <a class="page-link" href="@Url.Action("Index", new { page = Model.PageNumber + 1 })" aria-label="Next">
                            <span aria-hidden="true">&raquo;</span>
                        </a>
                    </li>
                </ul>
            </nav>
        </div>
    }
    else
    {
        <div class="alert alert-info text-center mt-5 shadow-sm">
            No consultations found. Click <strong>"New Consultation"</strong> to get started.
        </div>
    }
</div>

<script>
        function confirmDelete(itemId) {
        Swal.fire({
            title: 'Are you sure?',
            text: "This consultation will be permanently deleted!",
            icon: 'warning',
            showCancelButton: true,
            confirmButtonColor: '#dc3545',
            cancelButtonColor: '#6c757d',
            confirmButtonText: 'Yes, delete it!'
        }).then((result) => {
            if (result.isConfirmed) {
                // Submit the form after confirmation
                document.getElementById("deleteForm_" + itemId).submit();
            }
        });
    }

    @if (TempData["DeleteSuccess"] != null)
    {
        <text>
                Swal.fire({
                    icon: 'success',
                    title: 'Deleted!',
                    text: '@TempData["DeleteSuccess"]',
                    timer: 2500,
                    showConfirmButton: false
                });
        </text>
    }

</script>
