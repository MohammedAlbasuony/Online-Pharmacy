@using Pharmacy.BLL.ViewModels
@model OrderViewModel

@{
    ViewData["Title"] = "Order Confirmation";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <link rel="stylesheet" href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.8.0/font/bootstrap-icons.css">
    <style>
        :root {
            --primary-color: #74ebd5;
            --secondary-color: #9face6;
            --danger-color: #e74a3b;
            --warning-color: #f6c23e;
            --light-bg: #f8f9fc;
            --card-shadow: 0 4px 20px rgba(0, 0, 0, 0.08);
            --card-shadow-hover: 0 15px 30px rgba(0, 0, 0, 0.12);
        }

        body {
            font-family: 'Poppins', sans-serif;
            background-color: #f5f7fa;
            min-height: 100vh;
            display: flex;
            flex-direction: column;
            justify-content: center;
        }

        .confirmation-container {
            max-width: 800px;
            margin: 0 auto;
            width: 100%;
        }

        .form-header {
            text-align: center;
            margin-bottom: 2.5rem;
            position: relative;
        }

            .form-header h2 {
                font-weight: 700;
                color: #2c3e50;
                margin-bottom: 0.5rem;
                position: relative;
                display: inline-block;
            }

                .form-header h2::after {
                    content: '';
                    position: absolute;
                    bottom: -10px;
                    left: 50%;
                    transform: translateX(-50%);
                    width: 80px;
                    height: 4px;
                    background: linear-gradient(to right, var(--primary-color), var(--secondary-color));
                    border-radius: 2px;
                }

        .alert-success {
            background-color: #d4edda;
            color: #155724;
            border-radius: 10px;
            padding: 1rem;
            margin-bottom: 2rem;
        }

        .order-card {
            border-radius: 16px;
            border: none;
            overflow: hidden;
            transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.1);
            box-shadow: var(--card-shadow);
            background: white;
            position: relative;
            margin-bottom: 2rem;
        }

            .order-card:hover {
                transform: translateY(-8px);
                box-shadow: var(--card-shadow-hover);
            }

            .order-card::before {
                content: '';
                position: absolute;
                top: 0;
                left: 0;
                width: 6px;
                height: 100%;
                background: linear-gradient(to bottom, var(--primary-color), var(--secondary-color));
                transition: all 0.3s ease;
            }

        .card-header {
            background-color: var(--primary-color);
            color: white;
            padding: 1.5rem;
            font-weight: 600;
        }

        .card-body {
            padding: 2rem;
        }

        .items-card {
            border-radius: 16px;
            border: none;
            overflow: hidden;
            transition: all 0.4s cubic-bezier(0.175, 0.885, 0.32, 1.1);
            box-shadow: var(--card-shadow);
            background: white;
            position: relative;
        }

            .items-card:hover {
                transform: translateY(-8px);
                box-shadow: var(--card-shadow-hover);
            }

        .order-table {
            width: 100%;
            border-collapse: separate;
            border-spacing: 0;
        }

            .order-table th {
                background-color: var(--primary-color);
                color: white;
                font-weight: 600;
                padding: 1rem;
                text-align: center;
            }

            .order-table td {
                padding: 1rem;
                background-color: white;
                border-bottom: 1px solid rgba(0, 0, 0, 0.05);
                text-align: center;
            }

        .badge {
            font-size: 0.9rem;
            font-weight: 600;
            padding: 0.5rem 1rem;
            border-radius: 50px;
            display: inline-flex;
            align-items: center;
            gap: 0.5rem;
        }

        .badge-success {
            background-color: var(--secondary-color);
            color: white;
        }

        .badge-warning {
            background-color: var(--warning-color);
            color: #212529;
        }

        .badge-danger {
            background-color: var(--danger-color);
            color: white;
        }

        .btn-group {
            display: flex;
            justify-content: center;
            gap: 1.5rem;
            margin-top: 2rem;
        }

        .btn {
            padding: 12px 30px;
            border-radius: 10px;
            font-weight: 600;
            font-size: 1rem;
            transition: all 0.3s cubic-bezier(0.25, 0.8, 0.25, 1);
            display: inline-flex;
            align-items: center;
            justify-content: center;
        }

        .btn-outline-primary {
            border: 2px solid var(--primary-color);
            color: var(--primary-color);
            background-color: transparent;
        }

            .btn-outline-primary:hover {
                background-color: var(--primary-color);
                color: white;
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(116, 235, 213, 0.3);
            }

        .btn-success {
            background-color: var(--secondary-color);
            border: 2px solid var(--secondary-color);
            color: white;
        }

            .btn-success:hover {
                background-color: #17a673;
                border-color: #17a673;
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(28, 200, 138, 0.3);
            }

        @@media (max-width: 768px) {
            .confirmation-container {
                padding: 0 15px;
            }

            .btn-group {
                flex-direction: column;
                gap: 15px;
            }

            .btn {
                width: 100%;
            }
        }
    </style>
</head>
<body>
    <div class="container py-5">
        <div class="confirmation-container animate__animated animate__fadeIn">
            <div class="form-header animate__animated animate__fadeInDown">
                <h2><i class="bi bi-check-circle-fill me-2"></i>Order Confirmation</h2>
                <p class="text-muted">Thank you for your purchase</p>
            </div>

            @if (TempData["Success"] != null)
            {
                <div class="alert alert-success animate__animated animate__fadeIn">
                    <i class="bi bi-check-circle-fill me-2"></i> @TempData["Success"]
                </div>
            }

            <div class="order-card animate__animated animate__fadeIn animate__delay-1s">
                <div class="card-header">
                    <h5 class="mb-0"><i class="bi bi-receipt me-2"></i>Order Summary</h5>
                </div>
                <div class="card-body">
                    <p><strong>Order ID:</strong> @Model.Order.OrderID</p>
                    <p><strong>Order Date:</strong> @Model.Order.OrderDate.ToString("f")</p>
                    <p><strong>Total Price:</strong> @Model.Order.TotalPrice.ToString("C")</p>
                    <p>
                        <strong>Status:</strong>
                        @{
                            var status = Model.Order.Status?.ToLower();
                            string badgeClass = status switch
                            {
                                "paid" => "badge-success",
                                "pending" => "badge-warning",
                                "cancelled" => "badge-danger",
                                _ => "badge-secondary"
                            };

                            string statusIcon = status switch
                            {
                                "paid" => "bi-check-circle-fill",
                                "pending" => "bi-hourglass-split",
                                "cancelled" => "bi-x-circle-fill",
                                _ => "bi-question-circle-fill"
                            };
                        }
                        <span class="@badgeClass">
                            <i class="bi @statusIcon"></i> @Model.Order.Status
                        </span>
                    </p>
                </div>
            </div>

            <div class="items-card animate__animated animate__fadeIn animate__delay-2s">
                <div class="card-header bg-light">
                    <h5 class="mb-0"><i class="bi bi-bag-fill me-2"></i>Ordered Items</h5>
                </div>
                <div class="card-body p-0">
                    <table class="order-table">
                        <thead>
                            <tr>
                                <th>Medication</th>
                                <th>Quantity</th>
                                <th>Unit Price</th>
                                <th>Total Price</th>
                            </tr>
                        </thead>
                        <tbody>
                            @foreach (var item in Model.OrderItems)
                            {
                                <tr class="animate__animated animate__fadeIn">
                                    <td>@item.MedicationName</td>
                                    <td>@item.Quantity</td>
                                    <td>@item.UnitPrice.ToString("C")</td>
                                    <td>@((item.Quantity * item.UnitPrice).ToString("C"))</td>
                                </tr>
                            }
                        </tbody>
                    </table>
                </div>
            </div>

            <div class="btn-group">
                <a href="@Url.Action("Index", "Cart")" class="btn btn-outline-primary">
                    <i class="bi bi-arrow-left-circle me-1"></i> Back to Cart
                </a>

                @if (!string.Equals(Model.Order.Status, "Paid", StringComparison.OrdinalIgnoreCase))
                {
                    <form method="post" action="@Url.Action("ConfirmAndPay", "Cart")">
                        <input type="hidden" name="orderId" value="@Model.Order.OrderID" />
                        <button type="submit" class="btn btn-success">
                            <i class="bi bi-credit-card-fill me-1"></i> Confirm and Pay
                        </button>
                    </form>
                }
            </div>
        </div>
    </div>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
</body>
</html>