@using Pharmacy.BLL.ViewModels
@model ResetPasswordViewModel

@{
    ViewData["Title"] = "Reset Password";
    ViewData["BodyClass"] = "reset-password-page";
}

<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0" />
    <title>@ViewData["Title"]</title>
    <link href="https://fonts.googleapis.com/css2?family=Poppins:wght@300;400;500;600;700&display=swap" rel="stylesheet">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/animate.css/4.1.1/animate.min.css">
    <link rel="stylesheet" href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.5.0/css/all.min.css">
    <style>

        :root {
            --primary-gradient: linear-gradient(135deg, #74ebd5 0%, #9face6 100%);
            --secondary-gradient: linear-gradient(135deg, #74ebd5, #9face6);
            --glass-bg: rgba(255, 255, 255, 0.15);
            --glass-border: rgba(255, 255, 255, 0.3);
            --text-light: rgba(255, 255, 255, 0.9);
            --text-lighter: rgba(255, 255, 255, 0.7);
            --success-color: #28a745;
        }

        body {
            font-family: 'Poppins', sans-serif;
            background: var(--primary-gradient);
            min-height: 100vh;
            margin: 0;
            overflow-x: hidden;
            color: var(--text-light);
        }

        .reset-password-container {
            perspective: 1000px;
            transform-style: preserve-3d;
        }

        .card-glass {
            backdrop-filter: blur(16px);
            background-color: var(--glass-bg);
            border: 1px solid var(--glass-border);
            border-radius: 20px;
            box-shadow: 0 8px 32px rgba(0, 0, 0, 0.2);
            transform-style: preserve-3d;
            transition: all 0.5s ease;
            overflow: hidden;
        }

            .card-glass:hover {
                transform: translateY(-5px) rotateX(2deg);
                box-shadow: 0 15px 45px rgba(0, 0, 0, 0.3);
            }

        .form-control, .form-select {
            background-color: #f0f4f8; /* Light blue-gray background */
            border: 1px solid #cbd5e0; /* Light gray border */
            color: #1a202c; /* Dark gray text */
            transition: all 0.3s ease;
            font-weight: 500;
            padding: 0.75rem 1.25rem;
        }

            .form-control:focus, .form-select:focus {
                background-color: #ffffff; /* White when focused */
                border-color: #667eea; /* Primary color border */
                box-shadow: 0 0 0 0.25rem rgba(102, 126, 234, 0.25);
                color: #1a202c; /* Maintain black text */
            }

            .form-control::placeholder {
                color: #718096; /* Medium gray placeholder */
                font-weight: 400;
            }

        .btn-primary {
            background: var(--secondary-gradient);
            border: none;
            font-weight: 600;
            letter-spacing: 0.5px;
            transition: all 0.3s ease;
            position: relative;
            overflow: hidden;
        }

            .btn-primary:hover {
                transform: translateY(-2px);
                box-shadow: 0 5px 15px rgba(0, 0, 0, 0.3);
            }

            .btn-primary::after {
                content: '';
                position: absolute;
                top: 0;
                left: -100%;
                width: 100%;
                height: 100%;
                background: linear-gradient(90deg, transparent, rgba(255, 255, 255, 0.2), transparent);
                transition: 0.5s;
            }

            .btn-primary:hover::after {
                left: 100%;
            }

        .input-group-text {
            background-color: #e2e8f0;
            border: 1px solid #cbd5e0;
            color: #4a5568;
            padding: 0.75rem 1rem;
            transition: all 0.3s ease;
        }

        .input-group:focus-within .input-group-text {
            background-color: #ffffff;
            color: #667eea;
            border-color: #667eea;
        }

        .text-gradient {
            background: linear-gradient(to right, #74ebd5, #9face6);
            -webkit-background-clip: text;
            background-clip: text;
            color: transparent;
            display: inline-block;
        }

        .form-text {
            color: var(--text-lighter) !important;
            font-size: 0.8rem;
        }

        .alert {
            backdrop-filter: blur(10px);
            background-color: rgba(255, 0, 0, 0.2);
            border: 1px solid rgba(255, 255, 255, 0.2);
        }

        .link-hover {
            transition: all 0.3s ease;
            position: relative;
        }

            .link-hover:after {
                content: '';
                position: absolute;
                width: 0;
                height: 2px;
                bottom: -2px;
                left: 0;
                background: white;
                transition: width 0.3s ease;
            }

            .link-hover:hover:after {
                width: 100%;
            }

        .form-label {
            font-weight: 500;
            margin-bottom: 0.5rem;
            display: inline-block;
            color: #000000; /* Changed from var(--text-light) to black */
        }

        .rounded-pill {
            border-radius: 50rem !important;
        }

        .floating-bubbles {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            z-index: -1;
            overflow: hidden;
        }

        .bubble {
            position: absolute;
            bottom: -100px;
            background: rgba(255, 255, 255, 0.1);
            border-radius: 50%;
            animation: float linear infinite;
        }

        @@keyframes float {
            0% {
                transform: translateY(0) rotate(0deg);
                opacity: 1;
                bottom: -100px;
            }

            100% {
                transform: translateY(-100vh) rotate(720deg);
                opacity: 0;
                bottom: 100vh;
            }
        }

        .password-strength {
            height: 5px;
            margin-top: 5px;
            border-radius: 5px;
            transition: all 0.3s ease;
        }

        .strength-0 {
            width: 20%;
            background-color: #dc3545;
        }

        .strength-1 {
            width: 40%;
            background-color: #fd7e14;
        }

        .strength-2 {
            width: 60%;
            background-color: #ffc107;
        }

        .strength-3 {
            width: 80%;
            background-color: #28a745;
        }

        .strength-4 {
            width: 100%;
            background-color: #20c997;
        }
    </style>
</head>
<body>
    <div class="floating-bubbles"></div>

    <section class="py-5 min-vh-100 d-flex align-items-center">
        <div class="container">
            <div class="row justify-content-center">
                <div class="col-md-10 col-lg-6">
                    <div class="card-glass animate__animated animate__fadeInUp animate__faster">
                        <div class="card-body p-5">
                            <h3 class="mb-4 text-center fw-bold text-gradient animate__animated animate__fadeIn">Create New Password</h3>
                            <p class="mb-4 text-center fw-bold text-gradient animate__animated animate__fadeIn animate__delay-1s">Enter your new password below</p>

                            @if (!string.IsNullOrEmpty(ViewBag.ErrorMessage))
                            {
                                <div class="alert alert-danger animate__animated animate__shakeX" role="alert">
                                    <i class="fas fa-exclamation-circle me-2"></i> @ViewBag.ErrorMessage
                                </div>
                            }

                            <form asp-action="ResetPassword" method="post" class="needs-validation" novalidate>
                                <input asp-for="Code" type="hidden" />

                                <div class="mb-4 animate__animated animate__fadeIn animate__delay-1s">
                                    <label asp-for="Email" class="form-label">Email</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-envelope"></i></span>
                                        <input asp-for="Email" class="form-control" placeholder="example@domain.com" />
                                    </div>
                                    <span asp-validation-for="Email" class="text-danger small"></span>
                                </div>

                                <div class="mb-4 animate__animated animate__fadeIn animate__delay-2s">
                                    <label asp-for="Password" class="form-label">New Password</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-lock"></i></span>
                                        <input asp-for="Password" id="passwordField" class="form-control" placeholder="********" />
                                        <button class="btn btn-outline toggle-password" type="button">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                    </div>
                                    <div id="passwordStrength" class="password-strength strength-0"></div>
                                    <span asp-validation-for="Password" class="text-danger small"></span>
                                </div>

                                <div class="mb-4 animate__animated animate__fadeIn animate__delay-2s">
                                    <label asp-for="ConfirmPassword" class="form-label">Confirm Password</label>
                                    <div class="input-group">
                                        <span class="input-group-text"><i class="fas fa-lock"></i></span>
                                        <input asp-for="ConfirmPassword" class="form-control" placeholder="********" />
                                        <button class="btn btn-outline toggle-password" type="button">
                                            <i class="fas fa-eye"></i>
                                        </button>
                                    </div>
                                    <span asp-validation-for="ConfirmPassword" class="text-danger small"></span>
                                </div>

                                <div class="d-grid mb-4 animate__animated animate__fadeIn animate__delay-3s">
                                    <button type="submit" class="btn btn-primary btn-lg rounded-pill py-3">
                                        <span class="submit-text">Reset Password</span>
                                        <span class="spinner-border spinner-border-sm d-none" role="status" aria-hidden="true"></span>
                                    </button>
                                </div>
                            </form>
                        </div>
                    </div>
                </div>
            </div>
        </div>
    </section>

    <script src="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/js/bootstrap.bundle.min.js"></script>
    <partial name="_ValidationScriptsPartial" />

    <script>
        // Floating bubbles animation
        document.addEventListener('DOMContentLoaded', function() {
            const bubblesContainer = document.querySelector('.floating-bubbles');
            const bubbleCount = 15;

            for (let i = 0; i < bubbleCount; i++) {
                const bubble = document.createElement('div');
                bubble.classList.add('bubble');

                // Random size between 10px and 50px
                const size = Math.random() * 40 + 10;
                bubble.style.width = `${size}px`;
                bubble.style.height = `${size}px`;

                // Random position
                bubble.style.left = `${Math.random() * 100}%`;

                // Random animation duration between 10s and 20s
                const duration = Math.random() * 10 + 10;
                bubble.style.animationDuration = `${duration}s`;

                // Random delay
                bubble.style.animationDelay = `${Math.random() * 5}s`;

                bubblesContainer.appendChild(bubble);
            }

            // Password toggle
            document.querySelectorAll('.toggle-password').forEach(button => {
                button.addEventListener('click', () => {
                    const input = button.previousElementSibling;
                    const icon = button.querySelector('i');
                    const isPassword = input.getAttribute('type') === 'password';
                    input.setAttribute('type', isPassword ? 'text' : 'password');
                    icon.classList.toggle('fa-eye');
                    icon.classList.toggle('fa-eye-slash');

                    // Add animation
                    button.classList.add('animate__animated', 'animate__pulse');
                    setTimeout(() => {
                        button.classList.remove('animate__animated', 'animate__pulse');
                    }, 500);
                });
            });

            // Password strength meter
            const passwordField = document.getElementById('passwordField');
            const strengthMeter = document.getElementById('passwordStrength');

            passwordField.addEventListener('input', function() {
                const password = this.value;
                let strength = 0;

                // Length check
                if (password.length >= 8) strength++;
                if (password.length >= 12) strength++;

                // Complexity checks
                if (/[A-Z]/.test(password)) strength++;
                if (/[0-9]/.test(password)) strength++;
                if (/[^A-Za-z0-9]/.test(password)) strength++;

                // Cap at 4 for our meter
                strength = Math.min(strength, 4);

                // Update meter
                strengthMeter.className = 'password-strength strength-' + strength;
            });

            // Form submission animation
            const form = document.querySelector('form');
            form.addEventListener('submit', function(e) {
                const submitButton = this.querySelector('button[type="submit"]');
                const submitText = submitButton.querySelector('.submit-text');
                const spinner = submitButton.querySelector('.spinner-border');

                submitText.classList.add('d-none');
                spinner.classList.remove('d-none');
                submitButton.disabled = true;

                // Add pulse animation
                submitButton.classList.add('animate__animated', 'animate__pulse');
            });
        });
    </script>
</body>
</html>